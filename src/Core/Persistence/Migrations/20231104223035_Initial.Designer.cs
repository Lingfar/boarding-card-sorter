// <auto-generated />
using System;
using Domain.BoardingCards;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence.DbContexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20231104223035_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "boarding_card_type", new[] { "bus", "train", "plane" });
            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "uuid-ossp");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.BoardingCards.BoardingCard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("Arrival")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("arrival");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("departure");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<BoardingCardType>("Type")
                        .HasColumnType("boarding_card_type")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_boarding_card");

                    b.ToTable("boarding_card", "public");

                    b.HasDiscriminator<BoardingCardType>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.BusCards.BusCard", b =>
                {
                    b.HasBaseType("Domain.BoardingCards.BoardingCard");

                    b.Property<string>("Seat")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("seat");

                    b.ToTable("boarding_card", "public");

                    b.HasDiscriminator().HasValue(BoardingCardType.Bus);
                });

            modelBuilder.Entity("Domain.PlaneCards.PlaneCard", b =>
                {
                    b.HasBaseType("Domain.BoardingCards.BoardingCard");

                    b.Property<string>("Counter")
                        .HasColumnType("text")
                        .HasColumnName("counter");

                    b.Property<string>("Gate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("gate");

                    b.Property<string>("Seat")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("seat");

                    b.ToTable("boarding_card", "public");

                    b.HasDiscriminator().HasValue(BoardingCardType.Plane);
                });

            modelBuilder.Entity("Domain.TrainCards.TrainCard", b =>
                {
                    b.HasBaseType("Domain.BoardingCards.BoardingCard");

                    b.Property<string>("Seat")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("text")
                        .HasColumnName("seat");

                    b.ToTable("boarding_card", "public");

                    b.HasDiscriminator().HasValue(BoardingCardType.Train);
                });
#pragma warning restore 612, 618
        }
    }
}
